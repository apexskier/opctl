(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{182:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return i})),r.d(t,"rightToc",(function(){return l})),r.d(t,"default",(function(){return s}));var n=r(1),a=r(9),c=(r(0),r(216)),o={title:"Image"},i={id:"reference/opspec/op.yml/call/container/image",title:"Image",description:"An image object defines the image to start a container with.",source:"@site/docs/reference/opspec/op.yml/call/container/image.md",permalink:"/docs/reference/opspec/op.yml/call/container/image",editUrl:"https://github.com/opctl/opctl/edit/master/website/docs/reference/opspec/op.yml/call/container/image.md",lastUpdatedBy:"Cameron Little",lastUpdatedAt:1617695975,sidebar:"docs",previous:{title:"Container call",permalink:"/docs/reference/opspec/op.yml/call/container/index"},next:{title:"Op call",permalink:"/docs/reference/opspec/op.yml/call/op"}},l=[{value:"Properties",id:"properties",children:[{value:"<code>ref</code>",id:"ref",children:[]},{value:"<code>pullCreds</code>",id:"pullcreds",children:[]}]}],p={rightToc:l},b="wrapper";function s(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(c.b)(b,Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"An image object defines the image to start a container with."),Object(c.b)("h2",{id:"properties"},"Properties"),Object(c.b)("h3",{id:"ref"},Object(c.b)("inlineCode",{parentName:"h3"},"ref")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"required")),Object(c.b)("p",null,"A string referencing a local or remote image. Two types of image refs are supported:"),Object(c.b)("h4",{id:"oci-images"},"OCI images"),Object(c.b)("p",null,"A ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/opspec/op.yml/variable-reference"}),"variable reference")," evaluating to a ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"../../../types/dir"}),"directory")," conforming to a ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/opencontainers/image-spec/blob/v1.0.1/image-layout.md"}),"v1.0.1 OCI ",Object(c.b)("inlineCode",{parentName:"a"},"image-layout")),"."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"ref: $(myOCIImageLayoutDir)\n")),Object(c.b)("h4",{id:"docker-images"},"Docker images"),Object(c.b)("p",null,"A ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/opspec/types/string#initialization"}),"string")," evaluating to a docker image name. Opctl will use the ",Object(c.b)("inlineCode",{parentName:"p"},"latest")," tag by default. These usually take the format ",Object(c.b)("inlineCode",{parentName:"p"},"[host][repository]image[tag]")," where the default host is ",Object(c.b)("inlineCode",{parentName:"p"},"docker.io")," and default tag is ",Object(c.b)("inlineCode",{parentName:"p"},"latest"),", but you can also reference local image tags (e.g. if running an image created by a previous call in the op)."),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"ref: 'ubuntu:19.10'\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),"ref: 'docker.io/ubuntu:19.10'\n")),Object(c.b)("h3",{id:"pullcreds"},Object(c.b)("inlineCode",{parentName:"h3"},"pullCreds")),Object(c.b)("p",null,"A ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/reference/opspec/op.yml/pull-creds"}),"pull credentials")," object containing credentials used to pull the image from a private source."))}s.isMDXComponent=!0},216:function(e,t,r){"use strict";r.d(t,"a",(function(){return s})),r.d(t,"b",(function(){return f}));var n=r(0),a=r.n(n);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=a.a.createContext({}),b=function(e){var t=a.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i({},t,{},e)),r},s=function(e){var t=b(e.components);return(a.a.createElement(p.Provider,{value:t},e.children))},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=Object(n.forwardRef)((function(e,t){var r=e.components,n=e.mdxType,c=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=b(r),u=n,d=s["".concat(o,".").concat(u)]||s[u]||m[u]||c;return r?a.a.createElement(d,i({ref:t},p,{components:r})):a.a.createElement(d,i({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=r.length,o=new Array(c);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:n,o[1]=i;for(var p=2;p<c;p++)o[p]=r[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);