(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{141:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return u}));var a=n(1),r=n(9),o=(n(0),n(216)),l={title:"Op call"},c={id:"reference/opspec/op.yml/call/op",title:"Op call",description:"An op call is an object that runs an external op. The external op can be local or remote and will not share scope with the current op.",source:"@site/docs/reference/opspec/op.yml/call/op.md",permalink:"/docs/reference/opspec/op.yml/call/op",editUrl:"https://github.com/opctl/opctl/edit/master/website/docs/reference/opspec/op.yml/call/op.md",lastUpdatedBy:"Cameron Little",lastUpdatedAt:1617200902,sidebar:"docs",previous:{title:"Image",permalink:"/docs/reference/opspec/op.yml/call/container/image"},next:{title:"Parallel loop call",permalink:"/docs/reference/opspec/op.yml/call/parallel-loop"}},i=[{value:"Properties",id:"properties",children:[{value:"<code>ref</code>",id:"ref",children:[]},{value:"<code>pullCreds</code>",id:"pullcreds",children:[]},{value:"<code>inputs</code>",id:"inputs",children:[]},{value:"<code>outputs</code>",id:"outputs",children:[]}]}],p={rightToc:i},b="wrapper";function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)(b,Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"An op call is an object that runs an external op. The external op can be local or remote and will not share scope with the current op."),Object(o.b)("h2",{id:"properties"},"Properties"),Object(o.b)("h3",{id:"ref"},Object(o.b)("inlineCode",{parentName:"h3"},"ref")),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"required")),Object(o.b)("p",null,"A ref is a string identifying the external op."),Object(o.b)("p",null,"For local ops, refs can be a relative path referencing an op's directory in the current local filesystem or a ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/reference/opspec/op.yml/variable-reference"}),"variable referencing")," an op's directory."),Object(o.b)("p",null,"Remote ops are referenced using git repository tags. Remote refs use the format ",Object(o.b)("inlineCode",{parentName:"p"},"git-repo#SEMVER_GIT_TAG[/path]"),", where ",Object(o.b)("inlineCode",{parentName:"p"},"git-repo")," is the hostname of the git server (checked out over ",Object(o.b)("inlineCode",{parentName:"p"},"https"),"), ",Object(o.b)("inlineCode",{parentName:"p"},"SEMVER_GIT_TAG")," is a valid tag on the git repository, and ",Object(o.b)("inlineCode",{parentName:"p"},"[/path]")," is an optional sub-directory where the op lives (usually used by repositories that contain collections of ops)."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),'ref: "github.com/opspec-pkgs/golang.build.bin#2.0.0"\n')),Object(o.b)("h3",{id:"pullcreds"},Object(o.b)("inlineCode",{parentName:"h3"},"pullCreds")),Object(o.b)("p",null,"A ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/reference/opspec/op.yml/pull-creds"}),"pull credentials")," object containing credentials used to pull the op from a private remote source."),Object(o.b)("h3",{id:"inputs"},Object(o.b)("inlineCode",{parentName:"h3"},"inputs")),Object(o.b)("p",null,"Inputs is an object that defines values passed from the current op into the external one, similar to passing named parameters to a function in modern programming languages. Each key is one of the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"../index#inputs"}),"defined inputs")," of the op being called. Key values define the in-scope value passed to the input and can take a few forms:"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"value"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"meaning"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/reference/opspec/op.yml/initializer"}),"value initializer")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The defined value is created explicitly")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/reference/opspec/op.yml/variable-reference"}),"variable reference")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The referenced value passed")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"null"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Shorthand for a variable reference of the key/input name (",Object(o.b)("inlineCode",{parentName:"td"},"inputName:")," is equivalent to ",Object(o.b)("inlineCode",{parentName:"td"},"inputName: $(inputName)"),"). This is similar to ",Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"../../types/object#initialization"}),"object initialization shorthand"))))),Object(o.b)("p",null,"Inputs defined by the external op that do not have a ",Object(o.b)("inlineCode",{parentName:"p"},"default")," are required, and your op will fail if not provided."),Object(o.b)("h3",{id:"outputs"},Object(o.b)("inlineCode",{parentName:"h3"},"outputs")),Object(o.b)("p",null,'Outputs is an object that defines values "returned" by the external op. Each key is one of the ',Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"../index#outputs"}),"defined outputs")," of the op being called. Key values define the variable the output's value will be stored in."),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"value"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"meaning"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"/docs/reference/opspec/op.yml/variable-reference"}),"variable reference")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The value will be stored in the referenced variable, which will be created if it doesn't exist.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"null"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Shorthand for a variable reference of the name of the key/output name (",Object(o.b)("inlineCode",{parentName:"td"},"outputName:")," is equivalent to ",Object(o.b)("inlineCode",{parentName:"td"},"outputName: $(outputName)"),")")))))}u.isMDXComponent=!0},216:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return O}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),b=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},u=function(e){var t=b(e.components);return(r.a.createElement(p.Provider,{value:t},e.children))},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=b(n),d=a,m=u["".concat(l,".").concat(d)]||u[d]||s[d]||o;return n?r.a.createElement(m,c({ref:t},p,{components:n})):r.a.createElement(m,c({ref:t},p))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[d]="string"==typeof e?e:a,l[1]=c;for(var p=2;p<o;p++)l[p]=n[p];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);